/*
 * generated by Xtext 2.19.0
 */
package circus.robocalc.robosim.graphical.label

import circus.robocalc.robochart.textual.RoboChartQualifiedNameConverter
import com.google.inject.Binder
import com.google.inject.name.Names
import org.eclipse.xtext.naming.IQualifiedNameConverter
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import circus.robocalc.robosim.textual.scoping.RoboSimImportURIGlobalScopeProvider
import circus.robocalc.robosim.textual.scoping.RoboSimImportedNamespaceAwareLocalScopeProvider

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class RoboSimLabelRuntimeModule extends AbstractRoboSimLabelRuntimeModule {
	override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
    	return RoboSimImportURIGlobalScopeProvider
	}
	def Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		return RoboChartQualifiedNameConverter
	}
	override void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider)
		.annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE))
		.to(RoboSimImportedNamespaceAwareLocalScopeProvider)
	}
}
